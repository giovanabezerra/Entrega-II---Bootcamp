# Workflow de Integração Contínua (CI)
name: CI / Build & Testes E2E

# Gatilhos: Roda em push ou pull request na branch main/master
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  # Permite rodar manualmente (opcional, mas útil)
  workflow_dispatch:

jobs:
  build-and-test:
    # Configura o ambiente Ubuntu mais recente
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout do código
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Configuração do Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3. Instalação de dependências
      - name: Install Dependencies
        run: npm install

      # 4. Build da Extensão (cria a pasta dist/)
      - name: Build Extension
        # Usa o script build-extension.mjs para criar dist/ e dist/extension.zip
        run: npm run build

      # 5. Instalação dos browsers do Playwright
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      # 6. Execução dos Testes E2E
      - name: Run E2E Tests
        # Executa o script que usa o Playwright configurado para carregar a extensão de dist/
        run: npm run test:ci

      # 7. Publicação do Relatório HTML como artefato
      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        if: always() # Garante que rode mesmo que os testes falhem
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 5
      
      # 8. Publicação do Arquivo ZIP da Extensão (Artefato para Release)
      - name: Upload Extension ZIP Artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension-zip-artifact
          path: dist/extension.zip
          retention-days: 7
          